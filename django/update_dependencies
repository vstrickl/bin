#!/bin/bash

# Set Colors and handle errors
source ~/bin/colors

# Checking if Dependencies are satisfied
echo -e "${YELLOW}Checking if dependencies are satisfied...${NC}"
pip freeze > installed_packages.txt
if ! diff -q <(sort "${PWD}/app/requirements.txt") <(sort installed_packages.txt) > /dev/null 2>&1; then
    echo -e "${YELLOW}Requirements not satisfied. Installing dependencies...${NC}"
    pip install -r "${PWD}/app/requirements.txt"
    if [ $? -ne 0 ]; then
        echo -e "${RED}Failed to install dependencies. Exiting...${NC}"
        echo -e " "
        exit 1
    else
        echo -e "${GREEN}Successfully installed dependencies!${NC}"
        echo -e " "
    fi
else
    echo -e "${GREEN}All requirements are already satisfied. Skipping pip install...${NC}"
    echo -e " "
fi
rm installed_packages.txt

# Resetting requirements.txt file
echo -e "${YELLOW}Resetting ${PWD}/app/requirements.txt...${NC}"
rm "${PWD}/app/requirements.txt"

# Updating requirements.txt with the latest installed packages (simple list)
echo -e "${YELLOW}Updating ${PROJECT_DIR}/app/requirements.txt...${NC}"
pip freeze | grep -E '^[a-zA-Z0-9\-]+' | awk -F '==' '{print $1}' > "${PWD}/app/requirements.txt"

# Display the updated requirements.txt
cat "${PWD}/app/requirements.txt"

echo -e "${GREEN}Successfully updated ${PWD}/app/requirements.txt!${NC}"
echo -e " "