#!/bin/bash

# Set Colors and handle errors
source ~/bin/colors

# Define cleanup function
cleanup() {
    echo -e " "
    echo -e "${YELLOW}Cleaning up and stopping Docker containers...${NC}"
    docker compose down
    if [ $? -ne 0 ]; then
        echo -e "${RED}Failed to stop Docker containers. Please check manually.${NC}"
        echo -e " "
    else
        echo -e "${GREEN}Docker containers stopped successfully.${NC}"
        echo -e " "
    fi
}

# Trap EXIT signal to run cleanup
trap cleanup EXIT

# Start Docker Build process
echo -e "${YELLOW}Starting Docker Build Prcess...${NC}"
bash ~/bin/sdlc/auth
if [ $? -ne 0 ]; then
    handle_error "Build script failed. Exiting..."
fi

# Stop any running containers using port 8000 (optional)
echo -e " "
echo -e "${YELLOW}Stopping containers using Port 8000...${NC}"
echo -e " "

# Capture the output of the docker stop command
stopped_containers=$(docker ps -q --filter "ancestor=web")

if [ -n "$stopped_containers" ]; then
    docker stop $stopped_containers
    if [ $? -ne 0 ]; then
        echo -e "${RED}Failed to stop running containers using port 8000. Exiting...${NC}"
        echo -e " "
        exit 1
    else
        echo -e "${GREEN}Successfully stopped containers using port 8000.${NC}"
        echo -e " "
    fi
else
    echo -e "${GREEN}No containers found using port 8000. Skipping stop step.${NC}"
    echo -e " "
fi

# Build Local Web Image
echo -e "${YELLOW}Building Local Web image...${NC}"
docker compose build web
if [ $? -ne 0 ]; then
    echo -e "${RED}Docker local_web image build failed. Exiting...${NC}"
    echo -e " "
    exit 1
fi

# Build CI/CD Image
echo -e "${YELLOW}Building CI/CD image...${NC}"
docker compose build check_code
if [ $? -ne 0 ]; then
    echo -e "${RED}Docker CI/CD image build failed. Exiting...${NC}"
    echo -e " "
    exit 1
fi

# Check if check_code executable exists and is executable
if [ ! -x "${PWD}/sdlc/check_code" ]; then
  echo -e "${RED}Error: check_code executable not found or not executable in ${PWD}/sdlc.${NC}"
  exit 1
fi

# Run check_code
docker compose run check_code

# Check if check_code ran successfully
if [ $? -ne 0 ]; then
  echo -e "${RED}Error: check_code failed.${NC}"
  exit 1
fi

echo -e " "
echo -e "${GREEN}Check Code Test successfully complete!${NC}"
echo -e " "